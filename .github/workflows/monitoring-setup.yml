name: üìä Monitoring Setup & Alerting
on:
  push:
    branches: [ main, develop ]
  schedule:
    - cron: '0 7 * * *'
  workflow_dispatch:
    inputs:
      component:
        description: 'Component to setup monitoring for'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - application
        - database
        - infrastructure
        - security
        - performance
      action:
        description: 'Action to perform'
        required: true
        default: 'setup'
        type: choice
        options:
        - setup
        - update
        - validate
        - cleanup
env:
  PYTHON_VERSION: '3.11'
jobs:
  monitoring-preparation:
    name: üìã Monitoring Preparation
    runs-on: ubuntu-latest
    outputs:
      component: ${{ steps.prep.outputs.component }}
      action: ${{ steps.prep.outputs.action }}
      config-exists: ${{ steps.prep.outputs.config-exists }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Prepare monitoring setup
      id: prep
      run: |
        echo "üìã Preparing monitoring setup..."
        COMPONENT="${{ github.event.inputs.component }}"
        ACTION="${{ github.event.inputs.action }}"
        echo "component=$COMPONENT" >> $GITHUB_OUTPUT
        echo "action=$ACTION" >> $GITHUB_OUTPUT
        if [[ -f "monitoring/monitoring-config.yml" ]]; then
          echo "config-exists=true" >> $GITHUB_OUTPUT
        else
          echo "config-exists=false" >> $GITHUB_OUTPUT
        fi
        echo "‚úÖ Monitoring preparation completed"
        echo "  Component: $COMPONENT"
        echo "  Action: $ACTION"
  application-monitoring:
    name: üéØ Application Monitoring
    runs-on: ubuntu-latest
    needs: monitoring-preparation
    if: needs.monitoring-preparation.outputs.component == 'all' || needs.monitoring-preparation.outputs.component == 'application'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install monitoring tools
      run: |
        python -m pip install --upgrade pip
        pip install prometheus-client grafana-api
    - name: Setup application monitoring
      run: |
        echo "üéØ Setting up application monitoring..."
        python scripts/setup_application_monitoring.py \
          --config monitoring/app-monitoring-config.yml \
          --action ${{ needs.monitoring-preparation.outputs.action }}
    - name: Validate application monitoring
      run: |
        echo "‚úÖ Validating application monitoring..."
        python scripts/validate_application_monitoring.py
    - name: Upload monitoring configuration
      uses: actions/upload-artifact@v3
      with:
        name: application-monitoring
        path: |
          monitoring/app-monitoring-config.yml
          monitoring/app-dashboard.json
  database-monitoring:
    name: üóÑÔ∏è Database Monitoring
    runs-on: ubuntu-latest
    needs: monitoring-preparation
    if: needs.monitoring-preparation.outputs.component == 'all' || needs.monitoring-preparation.outputs.component == 'database'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install monitoring tools
      run: |
        python -m pip install --upgrade pip
        pip install psycopg2-binary
    - name: Setup database monitoring
      run: |
        echo "üóÑÔ∏è Setting up database monitoring..."
        python scripts/setup_database_monitoring.py \
          --config monitoring/db-monitoring-config.yml \
          --action ${{ needs.monitoring-preparation.outputs.action }}
    - name: Validate database monitoring
      run: |
        echo "‚úÖ Validating database monitoring..."
        python scripts/validate_database_monitoring.py
    - name: Upload monitoring configuration
      uses: actions/upload-artifact@v3
      with:
        name: database-monitoring
        path: |
          monitoring/db-monitoring-config.yml
          monitoring/db-dashboard.json
  infrastructure-monitoring:
    name: üèóÔ∏è Infrastructure Monitoring
    runs-on: ubuntu-latest
    needs: monitoring-preparation
    if: needs.monitoring-preparation.outputs.component == 'all' || needs.monitoring-preparation.outputs.component == 'infrastructure'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install monitoring tools
      run: |
        python -m pip install --upgrade pip
        pip install psutil
    - name: Setup infrastructure monitoring
      run: |
        echo "üèóÔ∏è Setting up infrastructure monitoring..."
        python scripts/setup_infrastructure_monitoring.py \
          --config monitoring/infra-monitoring-config.yml \
          --action ${{ needs.monitoring-preparation.outputs.action }}
    - name: Validate infrastructure monitoring
      run: |
        echo "‚úÖ Validating infrastructure monitoring..."
        python scripts/validate_infrastructure_monitoring.py
    - name: Upload monitoring configuration
      uses: actions/upload-artifact@v3
      with:
        name: infrastructure-monitoring
        path: |
          monitoring/infra-monitoring-config.yml
          monitoring/infra-dashboard.json
  security-monitoring:
    name: üõ°Ô∏è Security Monitoring
    runs-on: ubuntu-latest
    needs: monitoring-preparation
    if: needs.monitoring-preparation.outputs.component == 'all' || needs.monitoring-preparation.outputs.component == 'security'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install monitoring tools
      run: |
        python -m pip install --upgrade pip
        pip install falcon
    - name: Setup security monitoring
      run: |
        echo "üõ°Ô∏è Setting up security monitoring..."
        python scripts/setup_security_monitoring.py \
          --config monitoring/security-monitoring-config.yml \
          --action ${{ needs.monitoring-preparation.outputs.action }}
    - name: Validate security monitoring
      run: |
        echo "‚úÖ Validating security monitoring..."
        python scripts/validate_security_monitoring.py
    - name: Upload monitoring configuration
      uses: actions/upload-artifact@v3
      with:
        name: security-monitoring
        path: |
          monitoring/security-monitoring-config.yml
          monitoring/security-dashboard.json
  performance-monitoring:
    name: ‚ö° Performance Monitoring
    runs-on: ubuntu-latest
    needs: monitoring-preparation
    if: needs.monitoring-preparation.outputs.component == 'all' || needs.monitoring-preparation.outputs.component == 'performance'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install monitoring tools
      run: |
        python -m pip install --upgrade pip
        pip install locust
    - name: Setup performance monitoring
      run: |
        echo "‚ö° Setting up performance monitoring..."
        python scripts/setup_performance_monitoring.py \
          --config monitoring/perf-monitoring-config.yml \
          --action ${{ needs.monitoring-preparation.outputs.action }}
    - name: Validate performance monitoring
      run: |
        echo "‚úÖ Validating performance monitoring..."
        python scripts/validate_performance_monitoring.py
    - name: Upload monitoring configuration
      uses: actions/upload-artifact@v3
      with:
        name: performance-monitoring
        path: |
          monitoring/perf-monitoring-config.yml
          monitoring/perf-dashboard.json
  alerting-setup:
    name: üö® Alerting Setup
    runs-on: ubuntu-latest
    needs: [
      application-monitoring,
      database-monitoring,
      infrastructure-monitoring,
      security-monitoring,
      performance-monitoring
    ]
    if: always()
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install alerting tools
      run: |
        python -m pip install --upgrade pip
        pip install requests
    - name: Setup alerting rules
      run: |
        echo "üö® Setting up alerting rules..."
        python scripts/setup_alerting.py \
          --config monitoring/alerting-config.yml \
          --action ${{ needs.monitoring-preparation.outputs.action }}
    - name: Validate alerting configuration
      run: |
        echo "‚úÖ Validating alerting configuration..."
        python scripts/validate_alerting.py
    - name: Upload alerting configuration
      uses: actions/upload-artifact@v3
      with:
        name: alerting-setup
        path: |
          monitoring/alerting-config.yml
          monitoring/alert-rules.yml
  monitoring-validation:
    name: ‚úÖ Monitoring Validation
    runs-on: ubuntu-latest
    needs: alerting-setup
    if: always()
    steps:
    - name: Download all monitoring configurations
      uses: actions/download-artifact@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install validation tools
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml
    - name: Validate complete monitoring setup
      run: |
        echo "‚úÖ Validating complete monitoring setup..."
        python scripts/validate_complete_monitoring.py
    - name: Generate monitoring summary
      run: |
        echo "üìä Generating monitoring summary..."
        python scripts/generate_monitoring_summary.py > monitoring-summary.md
    - name: Upload validation reports
      uses: actions/upload-artifact@v3
      with:
        name: monitoring-validation
        path: |
          monitoring-summary.md
          validation-report.json