# Generated by Django 4.2.23 on 2025-08-26 15:14

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('billing', '0006_remove_bill_bill_status_idx_and_more'),
        ('patients', '0002_alter_patient_email_alter_patient_phone'),
        ('hospitals', '0002_plan_hospitalplan'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountingInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('invoice_type', models.CharField(choices=[('PATIENT', 'Patient Invoice'), ('CORPORATE', 'Corporate Invoice'), ('INSURANCE', 'Insurance Invoice'), ('VENDOR', 'Vendor Invoice')], max_length=20)),
                ('invoice_date', models.DateField()),
                ('due_date', models.DateField()),
                ('subtotal_cents', models.BigIntegerField(default=0)),
                ('tax_cents', models.BigIntegerField(default=0)),
                ('discount_cents', models.BigIntegerField(default=0)),
                ('total_cents', models.BigIntegerField(default=0)),
                ('paid_cents', models.BigIntegerField(default=0)),
                ('balance_cents', models.BigIntegerField(default=0)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SENT', 'Sent'), ('OVERDUE', 'Overdue'), ('PAID', 'Paid'), ('CANCELLED', 'Cancelled'), ('PARTIAL', 'Partially Paid')], default='DRAFT', max_length=20)),
                ('terms_and_conditions', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('insurance_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('employer_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('patient_percentage', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('bill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='billing.bill')),
            ],
            options={
                'ordering': ['-invoice_date'],
            },
        ),
        migrations.CreateModel(
            name='AccountingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_number', models.CharField(max_length=50, unique=True)),
                ('payment_date', models.DateField()),
                ('amount_cents', models.BigIntegerField()),
                ('exchange_rate', models.DecimalField(decimal_places=4, default=1.0, max_digits=10)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('CARD', 'Credit/Debit Card'), ('UPI', 'UPI'), ('NET_BANKING', 'Net Banking'), ('BANK_TRANSFER', 'Bank Transfer'), ('CHEQUE', 'Cheque'), ('DD', 'Demand Draft'), ('INSURANCE_DIRECT', 'Insurance Direct Settlement'), ('CORPORATE_CREDIT', 'Corporate Credit'), ('ADJUSTMENT', 'Adjustment')], max_length=32)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('tds_cents', models.BigIntegerField(default=0)),
                ('tds_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CLEARED', 'Cleared'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('RECONCILED', 'Bank Reconciled')], default='PENDING', max_length=20)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_name', models.CharField(max_length=255)),
                ('account_number', models.CharField(max_length=50)),
                ('bank_name', models.CharField(max_length=255)),
                ('branch', models.CharField(blank=True, max_length=255)),
                ('ifsc_code', models.CharField(blank=True, max_length=11)),
                ('account_type', models.CharField(choices=[('SAVINGS', 'Savings Account'), ('CURRENT', 'Current Account'), ('CC', 'Cash Credit'), ('OD', 'Overdraft')], default='CURRENT', max_length=20)),
                ('opening_balance_cents', models.BigIntegerField(default=0)),
                ('current_balance_cents', models.BigIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChartOfAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_code', models.CharField(help_text='Unique account code (e.g., 1001)', max_length=20)),
                ('account_name', models.CharField(max_length=255)),
                ('account_type', models.CharField(choices=[('ASSETS', 'Assets'), ('LIABILITIES', 'Liabilities'), ('EQUITY', 'Equity'), ('INCOME', 'Income'), ('EXPENSES', 'Expenses')], max_length=32)),
                ('account_subtype', models.CharField(choices=[('CURRENT_ASSETS', 'Current Assets'), ('FIXED_ASSETS', 'Fixed Assets'), ('INTANGIBLE_ASSETS', 'Intangible Assets'), ('INVESTMENTS', 'Investments'), ('CURRENT_LIABILITIES', 'Current Liabilities'), ('LONG_TERM_LIABILITIES', 'Long Term Liabilities'), ('OPERATING_INCOME', 'Operating Income'), ('NON_OPERATING_INCOME', 'Non-Operating Income'), ('OPERATING_EXPENSES', 'Operating Expenses'), ('ADMINISTRATIVE_EXPENSES', 'Administrative Expenses'), ('FINANCIAL_EXPENSES', 'Financial Expenses')], max_length=32)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_system_account', models.BooleanField(default=False)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('parent_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='accounting.chartofaccounts')),
            ],
            options={
                'ordering': ['account_code'],
                'unique_together': {('hospital', 'account_code')},
            },
        ),
        migrations.CreateModel(
            name='CostCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['code'],
                'unique_together': {('hospital', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(help_text='ISO 4217 currency code (e.g., INR, USD)', max_length=3)),
                ('name', models.CharField(max_length=100)),
                ('symbol', models.CharField(default='â‚¹', max_length=10)),
                ('exchange_rate', models.DecimalField(decimal_places=4, default=1.0, max_digits=10)),
                ('is_base_currency', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['code'],
                'unique_together': {('hospital', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer_code', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('customer_type', models.CharField(choices=[('CORPORATE', 'Corporate'), ('INSURANCE', 'Insurance Company'), ('GOVERNMENT', 'Government'), ('OTHER', 'Other')], default='CORPORATE', max_length=32)),
                ('contact_person', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('gstin', models.CharField(blank=True, max_length=15)),
                ('credit_limit_cents', models.BigIntegerField(default=0)),
                ('credit_days', models.IntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('hospital', 'customer_code')},
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expense_number', models.CharField(max_length=50, unique=True)),
                ('expense_date', models.DateField()),
                ('category', models.CharField(choices=[('MEDICAL_SUPPLIES', 'Medical Supplies'), ('PHARMACEUTICALS', 'Pharmaceuticals'), ('EQUIPMENT', 'Equipment'), ('UTILITIES', 'Utilities'), ('RENT', 'Rent'), ('SALARIES', 'Salaries'), ('PROFESSIONAL_FEES', 'Professional Fees'), ('MAINTENANCE', 'Maintenance'), ('INSURANCE', 'Insurance'), ('MARKETING', 'Marketing'), ('ADMINISTRATIVE', 'Administrative'), ('OTHER', 'Other')], max_length=32)),
                ('description', models.CharField(max_length=255)),
                ('amount_cents', models.BigIntegerField()),
                ('tax_cents', models.BigIntegerField(default=0)),
                ('tds_cents', models.BigIntegerField(default=0)),
                ('net_amount_cents', models.BigIntegerField()),
                ('invoice_number', models.CharField(blank=True, max_length=100)),
                ('purchase_order_number', models.CharField(blank=True, max_length=100)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_expenses', to=settings.AUTH_USER_MODEL)),
                ('cost_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.costcenter')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.currency')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['-expense_date'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(max_length=255)),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('unit_price_cents', models.BigIntegerField()),
                ('cost_price_cents', models.BigIntegerField(default=0)),
                ('subtotal_cents', models.BigIntegerField()),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('discount_cents', models.BigIntegerField(default=0)),
                ('taxable_cents', models.BigIntegerField()),
                ('tax_cents', models.BigIntegerField(default=0)),
                ('cgst_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('cgst_cents', models.BigIntegerField(default=0)),
                ('sgst_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('sgst_cents', models.BigIntegerField(default=0)),
                ('igst_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('igst_cents', models.BigIntegerField(default=0)),
                ('total_cents', models.BigIntegerField()),
                ('is_outsourced', models.BooleanField(default=False)),
                ('vendor_payout_cents', models.BigIntegerField(default=0)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='accounting.accountinginvoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PayrollEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pay_period_start', models.DateField()),
                ('pay_period_end', models.DateField()),
                ('pay_date', models.DateField()),
                ('basic_salary_cents', models.BigIntegerField()),
                ('hra_cents', models.BigIntegerField(default=0)),
                ('medical_allowance_cents', models.BigIntegerField(default=0)),
                ('transport_allowance_cents', models.BigIntegerField(default=0)),
                ('other_allowances_cents', models.BigIntegerField(default=0)),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('overtime_rate_cents', models.BigIntegerField(default=0)),
                ('bonus_cents', models.BigIntegerField(default=0)),
                ('incentive_cents', models.BigIntegerField(default=0)),
                ('pf_employee_cents', models.BigIntegerField(default=0)),
                ('pf_employer_cents', models.BigIntegerField(default=0)),
                ('esi_employee_cents', models.BigIntegerField(default=0)),
                ('esi_employer_cents', models.BigIntegerField(default=0)),
                ('professional_tax_cents', models.BigIntegerField(default=0)),
                ('tds_cents', models.BigIntegerField(default=0)),
                ('advance_deduction_cents', models.BigIntegerField(default=0)),
                ('other_deductions_cents', models.BigIntegerField(default=0)),
                ('gross_salary_cents', models.BigIntegerField()),
                ('total_deductions_cents', models.BigIntegerField()),
                ('net_salary_cents', models.BigIntegerField()),
                ('employer_cost_cents', models.BigIntegerField()),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('APPROVED', 'Approved'), ('PAID', 'Paid'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_payrolls', to=settings.AUTH_USER_MODEL)),
                ('cost_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.costcenter')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_payrolls', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_entries', to=settings.AUTH_USER_MODEL)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['-pay_date'],
                'unique_together': {('employee', 'pay_period_start', 'pay_period_end')},
            },
        ),
        migrations.CreateModel(
            name='ServicePackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('package_code', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('package_type', models.CharField(choices=[('SURGERY', 'Surgery Package'), ('DIAGNOSTIC', 'Diagnostic Package'), ('CONSULTATION', 'Consultation Package'), ('WELLNESS', 'Wellness Package'), ('EMERGENCY', 'Emergency Package')], max_length=32)),
                ('base_price_cents', models.BigIntegerField()),
                ('cost_price_cents', models.BigIntegerField(help_text='Internal cost for profitability analysis')),
                ('is_active', models.BooleanField(default=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['package_code'],
                'unique_together': {('hospital', 'package_code')},
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor_code', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('contact_person', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('gstin', models.CharField(blank=True, help_text='GST Identification Number', max_length=15)),
                ('pan', models.CharField(blank=True, help_text='PAN Number', max_length=10)),
                ('tds_category', models.CharField(blank=True, max_length=50)),
                ('tds_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('payment_terms_days', models.IntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('hospital', 'vendor_code')},
            },
        ),
        migrations.CreateModel(
            name='VendorPayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payout_number', models.CharField(max_length=50, unique=True)),
                ('payout_date', models.DateField()),
                ('total_services_cents', models.BigIntegerField()),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('commission_cents', models.BigIntegerField(default=0)),
                ('gross_payout_cents', models.BigIntegerField()),
                ('tds_cents', models.BigIntegerField(default=0)),
                ('other_deductions_cents', models.BigIntegerField(default=0)),
                ('net_payout_cents', models.BigIntegerField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSED', 'Processed'), ('PAID', 'Paid'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.vendor')),
            ],
            options={
                'ordering': ['-payout_date'],
            },
        ),
        migrations.CreateModel(
            name='VendorPayoutItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_date', models.DateField()),
                ('amount_cents', models.BigIntegerField()),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('invoice_line_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.invoicelineitem')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('payout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='accounting.vendorpayout')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TDSEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tds_entry_number', models.CharField(max_length=50, unique=True)),
                ('deduction_date', models.DateField()),
                ('section', models.CharField(choices=[('194A', 'Interest other than on Securities - 194A'), ('194C', 'Payments to Contractors - 194C'), ('194H', 'Commission or Brokerage - 194H'), ('194I', 'Rent - 194I'), ('194J', 'Professional Fees - 194J'), ('194O', 'E-commerce - 194O'), ('192', 'Salary - 192')], max_length=10)),
                ('gross_amount_cents', models.BigIntegerField()),
                ('tds_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('tds_amount_cents', models.BigIntegerField()),
                ('certificate_number', models.CharField(blank=True, max_length=100)),
                ('certificate_date', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tds_entries', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tds_entries_employee', to=settings.AUTH_USER_MODEL)),
                ('expense', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.expense')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('payroll', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.payrollentry')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.vendor')),
            ],
            options={
                'ordering': ['-deduction_date'],
            },
        ),
        migrations.CreateModel(
            name='TaxConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tax_type', models.CharField(choices=[('GST', 'Goods and Services Tax'), ('CGST', 'Central GST'), ('SGST', 'State GST'), ('IGST', 'Integrated GST'), ('VAT', 'Value Added Tax'), ('SERVICE_TAX', 'Service Tax'), ('TDS', 'Tax Deducted at Source'), ('TCS', 'Tax Collected at Source')], max_length=32)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('description', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('effective_from', models.DateField()),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['-effective_from', 'tax_type'],
            },
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('report_name', models.CharField(max_length=255)),
                ('report_type', models.CharField(choices=[('PROFIT_LOSS', 'Profit & Loss Statement'), ('BALANCE_SHEET', 'Balance Sheet'), ('CASH_FLOW', 'Cash Flow Statement'), ('TRIAL_BALANCE', 'Trial Balance'), ('AGING_REPORT', 'Aging Report'), ('GST_RETURN', 'GST Return'), ('TDS_RETURN', 'TDS Return'), ('PAYROLL_SUMMARY', 'Payroll Summary'), ('ASSET_DEPRECIATION', 'Asset Depreciation Report')], max_length=32)),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly')], max_length=20)),
                ('recipients', models.TextField(help_text='Email addresses separated by commas')),
                ('last_generated', models.DateTimeField(blank=True, null=True)),
                ('next_generation', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['next_generation'],
            },
        ),
        migrations.CreateModel(
            name='RecurringInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('frequency', models.CharField(choices=[('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('HALF_YEARLY', 'Half Yearly'), ('YEARLY', 'Yearly')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('next_billing_date', models.DateField()),
                ('last_generated_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('template_invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.accountinginvoice')),
            ],
            options={
                'ordering': ['next_billing_date'],
            },
        ),
        migrations.AddField(
            model_name='invoicelineitem',
            name='outsource_vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.vendor'),
        ),
        migrations.AddField(
            model_name='invoicelineitem',
            name='package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.servicepackage'),
        ),
        migrations.AddField(
            model_name='invoicelineitem',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='billing.servicecatalog'),
        ),
        migrations.CreateModel(
            name='InsuranceClaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('claim_number', models.CharField(max_length=50, unique=True)),
                ('claim_amount_cents', models.BigIntegerField()),
                ('approved_amount_cents', models.BigIntegerField(default=0)),
                ('received_amount_cents', models.BigIntegerField(default=0)),
                ('submission_date', models.DateField(blank=True, null=True)),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('UNDER_REVIEW', 'Under Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('PARTIALLY_APPROVED', 'Partially Approved'), ('PAID', 'Paid'), ('SETTLED', 'Settled')], default='DRAFT', max_length=32)),
                ('rejection_reason', models.TextField(blank=True)),
                ('insurance_ref_number', models.CharField(blank=True, max_length=100)),
                ('policy_number', models.CharField(blank=True, max_length=100)),
                ('authorization_number', models.CharField(blank=True, max_length=100)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('insurance_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.customer')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.accountinginvoice')),
            ],
            options={
                'ordering': ['-submission_date'],
            },
        ),
        migrations.CreateModel(
            name='ImportBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('import_type', models.CharField(choices=[('BANK_STATEMENT', 'Bank Statement'), ('EXPENSES', 'Expenses'), ('ASSETS', 'Assets'), ('VENDORS', 'Vendors'), ('CUSTOMERS', 'Customers')], max_length=32)),
                ('file_name', models.CharField(max_length=255)),
                ('total_records', models.IntegerField(default=0)),
                ('successful_records', models.IntegerField(default=0)),
                ('failed_records', models.IntegerField(default=0)),
                ('import_status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('error_log', models.TextField(blank=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('imported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FixedAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset_code', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('MEDICAL_EQUIPMENT', 'Medical Equipment'), ('IT_EQUIPMENT', 'IT Equipment'), ('FURNITURE', 'Furniture & Fixtures'), ('VEHICLES', 'Vehicles'), ('BUILDING', 'Building'), ('LAND', 'Land'), ('OFFICE_EQUIPMENT', 'Office Equipment'), ('OTHER', 'Other')], max_length=32)),
                ('purchase_date', models.DateField()),
                ('purchase_cost_cents', models.BigIntegerField()),
                ('invoice_reference', models.CharField(blank=True, max_length=100)),
                ('depreciation_method', models.CharField(choices=[('STRAIGHT_LINE', 'Straight Line'), ('REDUCING_BALANCE', 'Written Down Value'), ('DOUBLE_DECLINING', 'Double Declining Balance')], default='STRAIGHT_LINE', max_length=32)),
                ('useful_life_years', models.IntegerField()),
                ('salvage_value_cents', models.BigIntegerField(default=0)),
                ('depreciation_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('current_book_value_cents', models.BigIntegerField()),
                ('accumulated_depreciation_cents', models.BigIntegerField(default=0)),
                ('disposal_date', models.DateField(blank=True, null=True)),
                ('disposal_amount_cents', models.BigIntegerField(blank=True, null=True)),
                ('disposal_method', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('cost_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.costcenter')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.vendor')),
            ],
            options={
                'ordering': ['asset_code'],
                'unique_together': {('hospital', 'asset_code')},
            },
        ),
        migrations.CreateModel(
            name='FinancialYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='e.g., 2024-25', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['-start_date'],
                'unique_together': {('hospital', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ExportLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('export_type', models.CharField(choices=[('EXCEL', 'Excel Export'), ('CSV', 'CSV Export'), ('TALLY_XML', 'Tally XML'), ('GST_JSON', 'GST JSON'), ('ITR_EXCEL', 'ITR Excel')], max_length=32)),
                ('report_name', models.CharField(max_length=255)),
                ('filters_applied', models.JSONField(default=dict)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size_bytes', models.BigIntegerField(default=0)),
                ('exported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='expense',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.vendor'),
        ),
        migrations.CreateModel(
            name='BankTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_date', models.DateField()),
                ('transaction_type', models.CharField(choices=[('CREDIT', 'Credit'), ('DEBIT', 'Debit')], max_length=10)),
                ('amount_cents', models.BigIntegerField()),
                ('description', models.CharField(max_length=255)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('is_reconciled', models.BooleanField(default=False)),
                ('reconciled_at', models.DateTimeField(blank=True, null=True)),
                ('bank_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='accounting.bankaccount')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('reconciled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('reconciled_expense', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.expense')),
                ('reconciled_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.accountingpayment')),
            ],
            options={
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.currency'),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='hospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital'),
        ),
        migrations.AddField(
            model_name='accountingpayment',
            name='bank_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.bankaccount'),
        ),
        migrations.AddField(
            model_name='accountingpayment',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.currency'),
        ),
        migrations.AddField(
            model_name='accountingpayment',
            name='hospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital'),
        ),
        migrations.AddField(
            model_name='accountingpayment',
            name='invoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='accounting.accountinginvoice'),
        ),
        migrations.AddField(
            model_name='accountingpayment',
            name='received_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accountinginvoice',
            name='cost_center',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.costcenter'),
        ),
        migrations.AddField(
            model_name='accountinginvoice',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accountinginvoice',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.currency'),
        ),
        migrations.AddField(
            model_name='accountinginvoice',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.customer'),
        ),
        migrations.AddField(
            model_name='accountinginvoice',
            name='hospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital'),
        ),
        migrations.AddField(
            model_name='accountinginvoice',
            name='patient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patients.patient'),
        ),
        migrations.AddField(
            model_name='accountinginvoice',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.vendor'),
        ),
        migrations.CreateModel(
            name='AccountingAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action_type', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('APPROVE', 'Approve'), ('REJECT', 'Reject'), ('REVERSE', 'Reverse'), ('RECONCILE', 'Reconcile')], max_length=20)),
                ('table_name', models.CharField(max_length=100)),
                ('record_id', models.CharField(max_length=100)),
                ('old_values', models.JSONField(blank=True, default=dict)),
                ('new_values', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TaxLiability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('tax_type', models.CharField(choices=[('GST', 'Goods and Services Tax'), ('CGST', 'Central GST'), ('SGST', 'State GST'), ('IGST', 'Integrated GST'), ('VAT', 'Value Added Tax'), ('SERVICE_TAX', 'Service Tax'), ('TDS', 'Tax Deducted at Source'), ('TCS', 'Tax Collected at Source')], max_length=32)),
                ('total_sales_cents', models.BigIntegerField(default=0)),
                ('taxable_sales_cents', models.BigIntegerField(default=0)),
                ('tax_collected_cents', models.BigIntegerField(default=0)),
                ('tax_paid_cents', models.BigIntegerField(default=0)),
                ('input_tax_credit_cents', models.BigIntegerField(default=0)),
                ('net_tax_liability_cents', models.BigIntegerField(default=0)),
                ('return_filed', models.BooleanField(default=False)),
                ('filing_date', models.DateField(blank=True, null=True)),
                ('acknowledgment_number', models.CharField(blank=True, max_length=100)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['-period_start'],
                'unique_together': {('hospital', 'period_start', 'period_end', 'tax_type')},
            },
        ),
        migrations.CreateModel(
            name='ServicePackageItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField(default=1)),
                ('override_price_cents', models.BigIntegerField(blank=True, null=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='accounting.servicepackage')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.servicecatalog')),
            ],
            options={
                'unique_together': {('package', 'service')},
            },
        ),
        migrations.CreateModel(
            name='ProviderCommissionStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('commission_type', models.CharField(choices=[('PERCENTAGE', 'Percentage'), ('FIXED', 'Fixed Amount'), ('TIER', 'Tier Based')], max_length=20)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('fixed_amount_cents', models.BigIntegerField(default=0)),
                ('effective_from', models.DateField()),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.servicecatalog')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.vendor')),
            ],
            options={
                'ordering': ['-effective_from'],
                'unique_together': {('vendor', 'service', 'effective_from')},
            },
        ),
        migrations.CreateModel(
            name='PricingTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tier_code', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('tier_type', models.CharField(choices=[('B2B', 'Business to Business'), ('B2C', 'Business to Consumer')], max_length=10)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('markup_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['tier_code'],
                'unique_together': {('hospital', 'tier_code')},
            },
        ),
        migrations.CreateModel(
            name='LedgerEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entry_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('transaction_date', models.DateField()),
                ('reference_number', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('amount_cents', models.BigIntegerField()),
                ('exchange_rate', models.DecimalField(decimal_places=4, default=1.0, max_digits=10)),
                ('is_reversed', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('credit_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_entries', to='accounting.chartofaccounts')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.currency')),
                ('debit_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debit_entries', to='accounting.chartofaccounts')),
                ('expense', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.expense')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.accountinginvoice')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.accountingpayment')),
                ('payroll', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.payrollentry')),
                ('reversal_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.ledgerentry')),
            ],
            options={
                'ordering': ['-transaction_date', '-created_at'],
                'indexes': [models.Index(fields=['transaction_date'], name='accounting__transac_52297b_idx'), models.Index(fields=['debit_account', 'transaction_date'], name='accounting__debit_a_2d00ed_idx'), models.Index(fields=['credit_account', 'transaction_date'], name='accounting__credit__211f59_idx')],
            },
        ),
        migrations.CreateModel(
            name='DepreciationSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('depreciation_date', models.DateField()),
                ('depreciation_amount_cents', models.BigIntegerField()),
                ('accumulated_depreciation_cents', models.BigIntegerField()),
                ('book_value_cents', models.BigIntegerField()),
                ('is_processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='depreciation_entries', to='accounting.fixedasset')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['depreciation_date'],
                'unique_together': {('asset', 'depreciation_date')},
            },
        ),
        migrations.CreateModel(
            name='ComplianceDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document_type', models.CharField(choices=[('GST_CERTIFICATE', 'GST Certificate'), ('TRADE_LICENSE', 'Trade License'), ('DRUG_LICENSE', 'Drug License'), ('FIRE_SAFETY', 'Fire Safety Certificate'), ('POLLUTION_CLEARANCE', 'Pollution Clearance'), ('LABOR_LICENSE', 'Labor License'), ('PF_REGISTRATION', 'PF Registration'), ('ESI_REGISTRATION', 'ESI Registration'), ('TAN_CERTIFICATE', 'TAN Certificate'), ('OTHER', 'Other')], max_length=32)),
                ('document_number', models.CharField(max_length=100)),
                ('issuing_authority', models.CharField(max_length=255)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('renewal_date', models.DateField(blank=True, null=True)),
                ('document_file', models.FileField(blank=True, null=True, upload_to='compliance_documents/')),
                ('is_active', models.BooleanField(default=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['expiry_date'],
                'unique_together': {('hospital', 'document_type', 'document_number')},
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('budgeted_amount_cents', models.BigIntegerField()),
                ('actual_amount_cents', models.BigIntegerField(default=0)),
                ('variance_cents', models.BigIntegerField(default=0)),
                ('variance_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('notes', models.TextField(blank=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.chartofaccounts')),
                ('cost_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.costcenter')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('financial_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.financialyear')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['cost_center', 'account'],
                'unique_together': {('financial_year', 'cost_center', 'account')},
            },
        ),
        migrations.CreateModel(
            name='BookLock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lock_date', models.DateField()),
                ('lock_type', models.CharField(choices=[('MONTHLY', 'Monthly Lock'), ('QUARTERLY', 'Quarterly Lock'), ('YEARLY', 'Yearly Lock')], max_length=20)),
                ('reason', models.TextField()),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
                ('locked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-lock_date'],
                'unique_together': {('hospital', 'lock_date', 'lock_type')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='bankaccount',
            unique_together={('hospital', 'account_number', 'ifsc_code')},
        ),
        migrations.CreateModel(
            name='AccountingPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('period_name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_closed', models.BooleanField(default=False)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('closed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='hospitals.hospital')),
            ],
            options={
                'ordering': ['-start_date'],
                'unique_together': {('hospital', 'start_date', 'end_date')},
            },
        ),
        migrations.AddIndex(
            model_name='accountinginvoice',
            index=models.Index(fields=['invoice_date'], name='accounting__invoice_335e93_idx'),
        ),
        migrations.AddIndex(
            model_name='accountinginvoice',
            index=models.Index(fields=['due_date'], name='accounting__due_dat_544306_idx'),
        ),
        migrations.AddIndex(
            model_name='accountinginvoice',
            index=models.Index(fields=['status'], name='accounting__status_820aff_idx'),
        ),
        migrations.AddIndex(
            model_name='accountinginvoice',
            index=models.Index(fields=['patient'], name='accounting__patient_1f90f6_idx'),
        ),
        migrations.AddIndex(
            model_name='accountinginvoice',
            index=models.Index(fields=['customer'], name='accounting__custome_fd0423_idx'),
        ),
        migrations.AddIndex(
            model_name='accountingauditlog',
            index=models.Index(fields=['table_name', 'record_id'], name='accounting__table_n_295ac4_idx'),
        ),
        migrations.AddIndex(
            model_name='accountingauditlog',
            index=models.Index(fields=['user', 'timestamp'], name='accounting__user_id_fb12c4_idx'),
        ),
    ]
