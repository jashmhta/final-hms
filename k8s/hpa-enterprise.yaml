# Enterprise-Grade Horizontal Pod Autoscaler Configuration
# Author: Microservices Scaling Architect
# Purpose: Auto-scaling policies for all HMS microservices based on comprehensive metrics

# ==================== CORE SERVICES HPA ====================
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hms-backend-hpa
  namespace: hms-production
  labels:
    app: hms-backend
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hms-backend
  minReplicas: 3
  maxReplicas: 20
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 65
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    - type: Pods
      pods:
        metric:
          name: http_requests_per_second
        target:
          type: AverageValue
          averageValue: 2000
    - type: External
      external:
        metric:
          name: prometheus_http_requests_total
          selector:
            matchLabels:
              app: hms-backend
        target:
          type: AverageValue
          averageValue: "1000"
    - type: External
      external:
        metric:
          name: response_time_p95_ms
          selector:
            matchLabels:
              app: hms-backend
        target:
          type: AverageValue
          averageValue: "200"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
        - type: Pods
          value: 3
          periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hms-frontend-hpa
  namespace: hms-production
  labels:
    app: hms-frontend
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hms-frontend
  minReplicas: 2
  maxReplicas: 15
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 75
    - type: External
      external:
        metric:
          name: nginx_connections_active
          selector:
            matchLabels:
              app: hms-frontend
        target:
          type: AverageValue
          averageValue: "1000"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 600

# ==================== MICROSERVICES HPA ====================
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: patient-service-hpa
  namespace: hms-production
  labels:
    app: patient-service
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: patient-service
  minReplicas: 2
  maxReplicas: 12
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 65
    - type: Pods
      pods:
        metric:
          name: patient_records_processed
        target:
          type: AverageValue
          averageValue: "500"
    - type: External
      external:
        metric:
          name: postgres_connections
          selector:
            matchLabels:
              service: patient-service
        target:
          type: AverageValue
          averageValue: "50"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: appointment-service-hpa
  namespace: hms-production
  labels:
    app: appointment-service
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: appointment-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Pods
      pods:
        metric:
          name: appointment_bookings_per_minute
        target:
          type: AverageValue
          averageValue: "100"
    - type: External
      external:
        metric:
          name: redis_keyspace_hits
          selector:
            matchLabels:
              service: appointment-service
        target:
          type: AverageValue
          averageValue: "1000"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pharmacy-service-hpa
  namespace: hms-production
  labels:
    app: pharmacy-service
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pharmacy-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Pods
      pods:
        metric:
          name: prescription_fills_per_hour
        target:
          type: AverageValue
          averageValue: "200"
    - type: External
      external:
        metric:
          name: inventory_check_operations
          selector:
            matchLabels:
              service: pharmacy-service
        target:
          type: AverageValue
          averageValue: "500"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: lab-service-hpa
  namespace: hms-production
  labels:
    app: lab-service
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: lab-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 65
    - type: Pods
      pods:
        metric:
          name: lab_tests_processed_per_hour
        target:
          type: AverageValue
          averageValue: "150"
    - type: External
      external:
        metric:
          name: file_upload_operations
          selector:
            matchLabels:
              service: lab-service
        target:
          type: AverageValue
          averageValue: "50"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: billing-service-hpa
  namespace: hms-production
  labels:
    app: billing-service
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: billing-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Pods
      pods:
        metric:
          name: claims_processed_per_hour
        target:
          type: AverageValue
          averageValue: "300"
    - type: External
      external:
        metric:
          name: payment_gateway_requests
          selector:
            matchLabels:
              service: billing-service
        target:
          type: AverageValue
          averageValue: "100"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: analytics-service-hpa
  namespace: hms-production
  labels:
    app: analytics-service
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: analytics-service
  minReplicas: 2
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 75
    - type: Pods
      pods:
        metric:
          name: analytics_queries_per_minute
        target:
          type: AverageValue
          averageValue: "50"
    - type: External
      external:
        metric:
          name: report_generation_time_ms
          selector:
            matchLabels:
              service: analytics-service
        target:
          type: AverageValue
          averageValue: "5000"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: notification-service-hpa
  namespace: hms-production
  labels:
    app: notification-service
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: notification-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 65
    - type: Pods
      pods:
        metric:
          name: notifications_sent_per_minute
        target:
          type: AverageValue
          averageValue: "1000"
    - type: External
      external:
        metric:
          name: email_queue_depth
          selector:
            matchLabels:
              service: notification-service
        target:
          type: AverageValue
          averageValue: "100"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: er-alerts-hpa
  namespace: hms-production
  labels:
    app: er-alerts
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: er-alerts
  minReplicas: 3
  maxReplicas: 15
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
    - type: Pods
      pods:
        metric:
          name: emergency_alerts_per_minute
        target:
          type: AverageValue
          averageValue: "50"
    - type: External
      external:
        metric:
          name: alert_response_time_ms
          selector:
            matchLabels:
              service: er-alerts
        target:
          type: AverageValue
          averageValue: "100"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 15
      policies:
        - type: Percent
          value: 200
          periodSeconds: 30
        - type: Pods
          value: 5
          periodSeconds: 30
      selectPolicy: Max

# ==================== DATABASE HPA (READ REPLICAS) ====================
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: postgres-read-replica-hpa
  namespace: hms-production
  labels:
    app: postgres
    role: replica
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: postgres-read-replica
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: External
      external:
        metric:
          name: postgres_read_queries_per_second
          selector:
            matchLabels:
              role: replica
        target:
          type: AverageValue
          averageValue: "1000"
    - type: External
      external:
        metric:
          name: postgres_replication_lag_bytes
          selector:
            matchLabels:
              role: replica
        target:
          type: AverageValue
          averageValue: "1048576"  # 1MB

# ==================== API GATEWAY HPA ====================
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: kong-gateway-hpa
  namespace: hms-production
  labels:
    app: kong
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: kong-api-gateway
  minReplicas: 3
  maxReplicas: 20
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    - type: Pods
      pods:
        metric:
          name: kong_requests_per_second
        target:
          type: AverageValue
          averageValue: "5000"
    - type: External
      external:
        metric:
          name: kong_connections_active
          selector:
            matchLabels:
              app: kong
        target:
          type: AverageValue
          averageValue: "10000"

# ==================== CACHING LAYER HPA ====================
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: redis-cluster-hpa
  namespace: hms-production
  labels:
    app: redis
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: redis-cluster
  minReplicas: 6
  maxReplicas: 12
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: External
      external:
        metric:
          name: redis_connections_total
          selector:
            matchLabels:
              app: redis
        target:
          type: AverageValue
          averageValue: "5000"
    - type: External
      external:
        metric:
          name: redis_keyspace_hits_per_second
          selector:
            matchLabels:
              app: redis
        target:
          type: AverageValue
          averageValue: "10000"

# ==================== MONITORING HPA ====================
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: prometheus-hpa
  namespace: monitoring
  labels:
    app: prometheus
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: prometheus-server
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: External
      external:
        metric:
          name: prometheus_tsdb_symbol_table_size_bytes
          selector:
            matchLabels:
              app: prometheus
        target:
          type: AverageValue
          averageValue: "1073741824"  # 1GB
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: grafana-hpa
  namespace: monitoring
  labels:
    app: grafana
    scaling: auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: grafana-server
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Pods
      pods:
        metric:
          name: grafana_api_requests_per_second
        target:
          type: AverageValue
          averageValue: "100"

# ==================== CUSTOM METRICS SERVICE MONITORS ====================
apiVersion: v1
kind: Service
metadata:
  name: custom-metrics-api
  namespace: monitoring
  labels:
    app: custom-metrics
spec:
  selector:
    app: custom-metrics
  ports:
    - name: http
      port: 443
      targetPort: 443
---
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: hms-microservices-monitor
  namespace: monitoring
  labels:
    app: hms
    monitoring: prometheus
spec:
  selector:
    matchLabels:
      monitoring: prometheus
  endpoints:
    - port: http
      interval: 15s
      path: /metrics
  namespaceSelector:
    matchNames:
      - hms-production