apiVersion: apps/v1
kind: Deployment
metadata:
  name: hms-backend
  namespace: hms-production
  labels:
    app: hms-backend
    version: v1
spec:
  replicas: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      app: hms-backend
  template:
    metadata:
      labels:
        app: hms-backend
        version: v1
      annotations:
        sidecar.istio.io/inject: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
    spec:
      serviceAccountName: hms-backend-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: backend
        image: hms-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DJANGO_SETTINGS_MODULE
          value: "hms.settings.production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: hms-database-config
              key: url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: hms-redis-config
              key: url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: hms-app-secrets
              key: secret-key
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: hms-app-secrets
              key: encryption-key
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: hms-app-secrets
              key: jwt-secret
        - name: TALLY_API_KEY
          valueFrom:
            secretKeyRef:
              name: hms-integration-secrets
              key: tally-api-key
        - name: SMS_API_KEY
          valueFrom:
            secretKeyRef:
              name: hms-integration-secrets
              key: sms-api-key
        - name: EMAIL_API_KEY
          valueFrom:
            secretKeyRef:
              name: hms-integration-secrets
              key: email-api-key
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /health/
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready/
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: cache-volume
          mountPath: /app/cache
        - name: logs-volume
          mountPath: /app/logs
        - name: ssl-certs
          mountPath: /app/certs
          readOnly: true
      - name: celery-worker
        image: hms-backend:latest
        command: ["celery"]
        args: ["-A", "hms.celery", "worker", "-l", "info", "--concurrency=4"]
        env:
        - name: DJANGO_SETTINGS_MODULE
          value: "hms.settings.production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: hms-database-config
              key: url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: hms-redis-config
              key: url
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: cache-volume
          mountPath: /app/cache
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: cache-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      - name: ssl-certs
        secret:
          secretName: hms-tls-certs
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - hms-backend
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node-type"
        operator: "Equal"
        value: "production"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: hms-backend-service
  namespace: hms-production
  labels:
    app: hms-backend
spec:
  selector:
    app: hms-backend
  ports:
  - port: 8000
    targetPort: 8000
    name: http
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hms-backend-hpa
  namespace: hms-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hms-backend
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
