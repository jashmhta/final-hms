{
  "analysis_summary": {
    "total_services": 39,
    "ready_services": 36,
    "critical_services": 15,
    "average_readiness_score": 0.9589743589743589,
    "average_criticality_score": 0.6153846153846154,
    "analysis_timestamp": "2025-09-17T16:07:44.053106"
  },
  "framework_distribution": {
    "FastAPI": 38,
    "Unknown": 1
  },
  "common_issues": {},
  "top_recommendations": {
    "Add authentication mechanisms": 38,
    "Implement data encryption": 38,
    "Implement audit logging": 37,
    "Add unit and integration tests": 31,
    "Add compliance features (audit logging, HIPAA)": 22,
    "Add requirements.txt for dependencies": 4,
    "Add Dockerfile for containerization": 3,
    "Implement security features (authentication, authorization)": 1,
    "Add models.py for database schema": 1
  },
  "service_analyses": {
    "insurance_tpa_integration": {
      "name": "insurance_tpa_integration",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": true,
      "has_tests": true,
      "framework": "FastAPI",
      "port": 8004,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "Django==5.1.2",
        "djangorestframework==3.15.2",
        "django-cors-headers==4.4.0",
        "djangorestframework-simplejwt==5.3.1",
        "drf-yasg==1.21.7",
        "celery==5.4.0",
        "redis==5.1.1",
        "psycopg2-binary==2.9.9",
        "pytest==8.4.2",
        "pytest-django==4.11.1",
        "factory-boy==3.3.3",
        "pytest-mock==3.15.0",
        "pytest-cov==5.0.0",
        "coverage==7.6.1",
        "pytest-xdist==3.6.1",
        "requests-mock==1.12.1",
        "freezegun==1.5.1",
        "pytest-timeout==2.3.1",
        "pytest-html==4.1.1",
        "allure-pytest==2.13.4",
        "pytest-rerunfailures==12.1.0",
        "pytest-benchmark==4.0.1",
        "pytest-dependency==0.5.1",
        "pytest-subtests==0.11.0",
        "pytest-ordering==0.6",
        "pytest-randomly==3.15.0",
        "django-test-plus==1.1.0",
        "model-bakery==1.19.0",
        "pytest-django-queries==2.0.0",
        "pytest-sugar==0.9.7",
        "pytest-datadir==1.5.0",
        "pytest-env==1.0.1",
        "httpretty==1.1.4",
        "responses==0.25.3",
        "vcrpy==4.3.1",
        "pytest-httpserver==1.0.10",
        "fakeredis==2.20.0",
        "pytest-catchlog==2.1.1",
        "pytest-snapshot==0.13.0",
        "pytest-files==0.5",
        "pytest-flake8==1.1.1",
        "pytest-black==0.3.12",
        "pytest-mypy==0.10.0",
        "pytest-bdd==7.1.0",
        "pytest-selenium==4.0.2",
        "selenium==4.25.0",
        "black==24.8.0",
        "isort==5.13.2",
        "flake8==7.1.0",
        "mypy==1.11.0",
        "pre-commit==3.8.0",
        "sphinx==7.4.7",
        "sphinx-rtd-theme==2.0.0",
        "python-decouple==3.8",
        "gunicorn==22.0.0",
        "whitenoise==6.7.0",
        "django-storages==1.14.2",
        "boto3==1.35.25",
        "Pillow==10.4.0",
        "django-encrypted-fields==0.6.4",
        "django-crypto-fields==0.6.4",
        "sentry-sdk==2.13.0",
        "django-silk==5.1.0",
        "django-redis==5.4.0",
        "django-cache-url==3.4.4",
        "drf-spectacular==0.27.2",
        "swagger-ui-py==23.10.0",
        "django-anymail==9.3.0",
        "django-modeltranslation==0.18.11",
        "django-storages[azure]==1.14.2",
        "django-storages[s3]==1.14.2",
        "django-storages[dropbox]==1.14.2",
        "django-extensions==3.2.3",
        "django-debug-toolbar==4.4.5",
        "celery[redis]==5.4.0",
        "flower==2.0.1",
        "django-celery-beat==2.6.0",
        "django-celery-results==2.5.1",
        "django-allauth==0.63.3",
        "django-rest-auth==0.9.5",
        "django-guardian==2.4.0",
        "django-rules==3.4.0",
        "django-redis==5.4.0",
        "cachetools==5.5.0",
        "structlog==24.4.0",
        "python-json-logger==3.1.0",
        "prometheus-client==0.20.0",
        "django-prometheus==2.3.1",
        "django-health-check==3.2.1",
        "django-ratelimit==4.1.0",
        "django-ratelimit==4.1.0",
        "django-cors-headers==4.4.0",
        "django-session-security==2.6.1",
        "django-extensions==3.2.3",
        "django-admin-sortable2==2.1.28",
        "django-import-export==3.3",
        "django-private-storage==3.9.1",
        "django-downloadview==2.4.0",
        "django-background-tasks==1.2.6",
        "channels==4.1.0",
        "channels-redis==4.2.0",
        "graphene-django==3.2.4",
        "graphene==3.3.0",
        "drf-spectacular==0.27.2",
        "drf-spectacular-sidecar==2024.6.1",
        "django-migration-linter==24.5.0",
        "django-silk==5.1.0",
        "newrelic==8.11.0",
        "safety==2.3.5",
        "bandit==1.7.8",
        "docker==7.1.0",
        "docker-compose==1.29.2",
        "tox==4.16.0",
        "pre-commit==3.8.0",
        "black==24.8.0",
        "isort==5.13.2",
        "flake8==7.1.0",
        "mypy==1.11.0",
        "pytest==8.4.2",
        "pytest-django==4.11.1",
        "factory-boy==3.3.3",
        "pytest-mock==3.15.0",
        "pytest-cov==5.0.0",
        "coverage==7.6.1",
        "pytest-xdist==3.6.1",
        "pytest-randomly==3.15.0",
        "pytest-benchmark==4.0.1",
        "pytest-dependency==0.5.1",
        "pytest-subtests==0.11.0",
        "pytest-ordering==0.6",
        "pytest-sugar==0.9.7",
        "pytest-datadir==1.5.0",
        "pytest-env==1.0.1",
        "httpretty==1.1.4",
        "responses==0.25.3",
        "vcrpy==4.3.1",
        "pytest-httpserver==1.0.10",
        "fakeredis==2.20.0",
        "pytest-catchlog==2.1.1",
        "pytest-snapshot==0.13.0",
        "pytest-files==0.5",
        "pytest-flake8==1.1.1",
        "pytest-black==0.3.12",
        "pytest-mypy==0.10.0",
        "pytest-bdd==7.1.0",
        "pytest-selenium==4.0.2",
        "selenium==4.25.0",
        "pytest-html==4.1.1",
        "allure-pytest==2.13.4",
        "pytest-rerunfailures==12.1.0",
        "requests-mock==1.12.1",
        "freezegun==1.5.1",
        "pytest-timeout==2.3.1",
        "django-test-plus==1.1.0",
        "model-bakery==1.19.0",
        "pytest-django-queries==2.0.0",
        "gunicorn==22.0.0",
        "whitenoise==6.7.0",
        "django-storages==1.14.2",
        "boto3==1.35.25",
        "Pillow==10.4.0",
        "python-decouple==3.8",
        "django-encrypted-fields==0.6.4",
        "sentry-sdk==2.13.0",
        "django-silk==5.1.0",
        "prometheus-client==0.20.0",
        "django-prometheus==2.3.1",
        "django-health-check==3.2.1",
        "django-ratelimit==4.1.0",
        "django-cors-headers==4.4.0",
        "django-session-security==2.6.1",
        "psycopg2-binary==2.9.9",
        "django-redis==5.4.0",
        "cachetools==5.5.0",
        "celery[redis]==5.4.0",
        "flower==2.0.1",
        "django-celery-beat==2.6.0",
        "django-celery-results==2.5.1",
        "django-allauth==0.63.3",
        "django-rest-auth==0.9.5",
        "django-guardian==2.4.0",
        "django-rules==3.4.0",
        "drf-spectacular==0.27.2",
        "drf-yasg==1.21.7",
        "swagger-ui-py==23.10.0",
        "django-anymail==9.3.0",
        "django-modeltranslation==0.18.11",
        "django-admin-sortable2==2.1.28",
        "django-import-export==3.3",
        "django-private-storage==3.9.1",
        "django-downloadview==2.4.0",
        "django-extensions==3.2.3",
        "django-debug-toolbar==4.4.5",
        "channels==4.1.0",
        "channels-redis==4.2.0",
        "graphene-django==3.2.4",
        "graphene==3.3.0",
        "django-storages[azure]==1.14.2",
        "django-storages[s3]==1.14.2",
        "django-storages[dropbox]==1.14.2",
        "django-migration-linter==24.5.0",
        "safety==2.3.5",
        "bandit==1.7.8",
        "newrelic==8.11.0",
        "docker==7.1.0",
        "docker-compose==1.29.2",
        "sphinx==7.4.7",
        "sphinx-rtd-theme==2.0.0",
        "structlog==24.4.0",
        "python-json-logger==3.1.0",
        "django-background-tasks==1.2.6",
        "django-extensions==3.2.3",
        "tox==4.16.0",
        "pre-commit==3.8.0",
        "black==24.8.0",
        "isort==5.13.2",
        "flake8==7.1.0",
        "mypy==1.11.0"
      ],
      "security_features": [
        "Docker python:3",
        "Docker slim",
        "Uses jwt",
        "Uses redis",
        "Uses psycopg2",
        "Uses redis",
        "Uses redis",
        "Uses redis",
        "Uses redis",
        "Uses redis",
        "Uses redis",
        "Uses psycopg2",
        "Uses redis",
        "Uses redis",
        "Uses redis"
      ],
      "compliance_features": [
        "Handles patient data"
      ],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Implement audit logging"
      ]
    },
    "prescription": {
      "name": "prescription",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": false,
      "has_requirements": false,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic"
      ],
      "security_features": [
        "cors",
        "middleware"
      ],
      "compliance_features": [],
      "criticality_score": 0.8,
      "readiness_score": 0.6,
      "issues": [],
      "recommendations": [
        "Add Dockerfile for containerization",
        "Add requirements.txt for dependencies",
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "cybersecurity_enhancements": {
      "name": "cybersecurity_enhancements",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": true,
      "has_tests": true,
      "framework": "FastAPI",
      "port": 0,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.104.1",
        "uvicorn[standard]==0.24.0",
        "sqlalchemy==2.0.23",
        "psycopg2-binary==2.9.9",
        "alembic==1.12.1",
        "pydantic==2.5.0",
        "python-multipart==0.0.6",
        "python-dotenv==1.0.0",
        "pytest==7.4.3",
        "python-dateutil==2.8.2",
        "cryptography==41.0.7",
        "pyjwt==2.8.0"
      ],
      "security_features": [
        "encryption",
        "security",
        "Docker python:3",
        "Docker slim",
        "Uses sqlalchemy",
        "Uses psycopg2",
        "Uses pydantic",
        "Uses cryptography",
        "Uses jwt"
      ],
      "compliance_features": [
        "audit",
        "log",
        "compliance"
      ],
      "criticality_score": 0.8,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms"
      ]
    },
    "biomedical_equipment": {
      "name": "biomedical_equipment",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 9012,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi\\nuvicorn\\nsqlalchemy\\npsycopg2-binary\\npydantic\\nalembic\\npython-dotenv"
      ],
      "security_features": [
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses psycopg2"
      ],
      "compliance_features": [
        "Handles medical data"
      ],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "operation_theatre": {
      "name": "operation_theatre",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": false,
      "has_requirements": false,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 9019,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic"
      ],
      "security_features": [],
      "compliance_features": [
        "log",
        "compliance"
      ],
      "criticality_score": 0.5,
      "readiness_score": 0.6,
      "issues": [],
      "recommendations": [
        "Add Dockerfile for containerization",
        "Add requirements.txt for dependencies",
        "Implement security features (authentication, authorization)",
        "Add authentication mechanisms",
        "Implement data encryption",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "graphql_gateway": {
      "name": "graphql_gateway",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": false,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker alpine"
      ],
      "compliance_features": [],
      "criticality_score": 0.5,
      "readiness_score": 0.8,
      "issues": [],
      "recommendations": [
        "Add requirements.txt for dependencies",
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "ot_scheduling": {
      "name": "ot_scheduling",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "pydantic==2.9.2",
        "prometheus-fastapi-instrumentator==7.0.0",
        "SQLAlchemy==2.0.36",
        "python-jose[cryptography]==3.3.0",
        "psycopg2-binary==2.9.10",
        "opentelemetry-distro==0.48b0",
        "opentelemetry-sdk==1.27.0",
        "opentelemetry-exporter-otlp==1.27.0",
        "opentelemetry-instrumentation-fastapi==0.48b0",
        "opentelemetry-instrumentation-requests==0.48b0",
        "opentelemetry-instrumentation-sqlalchemy==0.48b0",
        "opentelemetry-instrumentation-psycopg2==0.48b0"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses cryptography",
        "Uses psycopg2",
        "Uses sqlalchemy",
        "Uses psycopg2"
      ],
      "compliance_features": [],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "ambulance": {
      "name": "ambulance",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "Unknown",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi\\nuvicorn\\nsqlalchemy\\npsycopg2-binary\\npydantic\\nalembic\\npython-dotenv"
      ],
      "security_features": [
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses psycopg2"
      ],
      "compliance_features": [
        "Handles medical data",
        "Handles patient data"
      ],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "triage": {
      "name": "triage",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "pydantic==2.9.2",
        "prometheus-fastapi-instrumentator",
        "python-jose[cryptography]",
        "opentelemetry-distro",
        "opentelemetry-exporter-otlp",
        "opentelemetry-instrumentation-fastapi",
        "opentelemetry-instrumentation-requests",
        "SQLAlchemy==2.0.36",
        "psycopg2-binary==2.9.10",
        "requests==2.32.3"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses cryptography",
        "Uses sqlalchemy",
        "Uses psycopg2"
      ],
      "compliance_features": [],
      "criticality_score": 0.8,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "patient_portal": {
      "name": "patient_portal",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 9010,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi\\nuvicorn\\nsqlalchemy\\npsycopg2-binary\\npydantic\\nalembic\\npython-dotenv"
      ],
      "security_features": [
        "authentication",
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses psycopg2"
      ],
      "compliance_features": [
        "log",
        "Handles password data",
        "Handles medical data",
        "Handles patient data"
      ],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Implement data encryption",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "lab": {
      "name": "lab",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "SQLAlchemy==2.0.36",
        "psycopg2-binary==2.9.10",
        "pydantic==2.9.2"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses sqlalchemy",
        "Uses psycopg2",
        "Uses pydantic"
      ],
      "compliance_features": [],
      "criticality_score": 0.8,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "facilities": {
      "name": "facilities",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "SQLAlchemy==2.0.36",
        "psycopg2-binary==2.9.10",
        "pydantic==2.9.2"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses sqlalchemy",
        "Uses psycopg2",
        "Uses pydantic"
      ],
      "compliance_features": [],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "emergency_department": {
      "name": "emergency_department",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": false,
      "has_requirements": false,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 9018,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic"
      ],
      "security_features": [
        "Input validation"
      ],
      "compliance_features": [
        "log",
        "compliance",
        "Handles medical data",
        "Handles patient data"
      ],
      "criticality_score": 0.8,
      "readiness_score": 0.6,
      "issues": [],
      "recommendations": [
        "Add Dockerfile for containerization",
        "Add requirements.txt for dependencies",
        "Add authentication mechanisms",
        "Implement data encryption",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "mrd": {
      "name": "mrd",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi\\nuvicorn\\nsqlalchemy\\npsycopg2-binary\\npydantic\\nalembic\\npython-dotenv"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses psycopg2"
      ],
      "compliance_features": [],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "consent": {
      "name": "consent",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "pydantic==2.9.2",
        "prometheus-fastapi-instrumentator==7.0.0",
        "SQLAlchemy==2.0.36",
        "python-jose[cryptography]==3.3.0",
        "psycopg2-binary==2.9.10",
        "alembic==1.13.3",
        "opentelemetry-distro",
        "opentelemetry-exporter-otlp",
        "opentelemetry-instrumentation-fastapi",
        "opentelemetry-instrumentation-requests"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses cryptography",
        "Uses psycopg2"
      ],
      "compliance_features": [],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "pharmacy": {
      "name": "pharmacy",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "SQLAlchemy==2.0.36",
        "psycopg2-binary==2.9.10",
        "pydantic==2.9.2"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses sqlalchemy",
        "Uses psycopg2",
        "Uses pydantic"
      ],
      "compliance_features": [],
      "criticality_score": 0.8,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "compliance_checklists": {
      "name": "compliance_checklists",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi\\nuvicorn\\nsqlalchemy\\npsycopg2-binary\\npydantic\\nalembic\\npython-dotenv"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses psycopg2"
      ],
      "compliance_features": [
        "compliance"
      ],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "billing": {
      "name": "billing",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "SQLAlchemy==2.0.36",
        "psycopg2-binary==2.9.10",
        "pydantic==2.9.2"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses sqlalchemy",
        "Uses psycopg2",
        "Uses pydantic"
      ],
      "compliance_features": [],
      "criticality_score": 0.8,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "price_estimator": {
      "name": "price_estimator",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "pydantic==2.9.2",
        "python-jose[cryptography]==3.3.0",
        "prometheus-fastapi-instrumentator",
        "opentelemetry-distro",
        "opentelemetry-exporter-otlp",
        "opentelemetry-instrumentation-fastapi",
        "opentelemetry-instrumentation-requests"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses cryptography"
      ],
      "compliance_features": [],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "ipd_management": {
      "name": "ipd_management",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": true,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8003,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.104.1",
        "uvicorn[standard]==0.24.0",
        "sqlalchemy==2.0.23",
        "psycopg2-binary==2.9.9",
        "alembic==1.12.1",
        "pydantic==2.5.0",
        "python-multipart==0.0.6",
        "python-dotenv==1.0.0",
        "pytest==7.4.3",
        "requests==2.31.0"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses sqlalchemy",
        "Uses psycopg2",
        "Uses pydantic"
      ],
      "compliance_features": [
        "Handles patient data"
      ],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "appointments": {
      "name": "appointments",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": true,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "SQLAlchemy==2.0.36",
        "psycopg2-binary==2.9.10",
        "pydantic==2.9.2",
        "pika==1.3.2",
        "pytest==8.3.4",
        "pytest-asyncio==0.23.8",
        "pytest-cov==6.0.0",
        "httpx==0.27.2",
        "factory-boy==3.3.1"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses sqlalchemy",
        "Uses psycopg2",
        "Uses pydantic"
      ],
      "compliance_features": [],
      "criticality_score": 0.8,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging"
      ]
    },
    "dietary": {
      "name": "dietary",
      "has_main": true,
      "has_models": false,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 9010,
      "dependencies": [
        "Pydantic",
        "fastapi\\nuvicorn\\nsqlalchemy\\npsycopg2-binary\\npydantic\\nalembic\\npython-dotenv"
      ],
      "security_features": [
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses psycopg2"
      ],
      "compliance_features": [],
      "criticality_score": 0.5,
      "readiness_score": 0.8,
      "issues": [],
      "recommendations": [
        "Add models.py for database schema",
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "marketing_crm": {
      "name": "marketing_crm",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 9013,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi\\nuvicorn\\nsqlalchemy\\npsycopg2-binary\\npydantic\\nalembic\\npython-dotenv"
      ],
      "security_features": [
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses psycopg2"
      ],
      "compliance_features": [],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "feedback": {
      "name": "feedback",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "pydantic==2.9.2",
        "prometheus-fastapi-instrumentator==7.0.0",
        "SQLAlchemy==2.0.36",
        "python-jose[cryptography]==3.3.0",
        "psycopg2-binary==2.9.10",
        "alembic==1.13.3",
        "opentelemetry-distro",
        "opentelemetry-exporter-otlp",
        "opentelemetry-instrumentation-fastapi",
        "opentelemetry-instrumentation-requests"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses cryptography",
        "Uses psycopg2"
      ],
      "compliance_features": [],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "audit": {
      "name": "audit",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "pydantic==2.9.2",
        "SQLAlchemy==2.0.36",
        "python-jose[cryptography]==3.3.0",
        "prometheus-fastapi-instrumentator==7.0.0",
        "psycopg2-binary==2.9.10",
        "fastapi-limiter==0.1.6",
        "redis==5.0.8",
        "cryptography==43.0.3",
        "opentelemetry-distro",
        "opentelemetry-exporter-otlp",
        "opentelemetry-instrumentation-fastapi",
        "opentelemetry-instrumentation-requests"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses cryptography",
        "Uses psycopg2",
        "Uses redis",
        "Uses cryptography"
      ],
      "compliance_features": [
        "audit"
      ],
      "criticality_score": 0.8,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add unit and integration tests"
      ]
    },
    "opd_management": {
      "name": "opd_management",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": true,
      "has_tests": true,
      "framework": "FastAPI",
      "port": 8009,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.104.1",
        "uvicorn[standard]==0.24.0",
        "sqlalchemy==2.0.23",
        "psycopg2-binary==2.9.9",
        "alembic==1.12.1",
        "pydantic==2.5.0",
        "python-multipart==0.0.6",
        "python-dotenv==1.0.0",
        "pytest==7.4.3",
        "python-dateutil==2.8.2"
      ],
      "security_features": [
        "Docker python:3",
        "Docker slim",
        "Uses sqlalchemy",
        "Uses psycopg2",
        "Uses pydantic"
      ],
      "compliance_features": [
        "Handles medical data",
        "Handles patient data"
      ],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Implement audit logging"
      ]
    },
    "housekeeping_maintenance": {
      "name": "housekeeping_maintenance",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 9011,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi\\nuvicorn\\nsqlalchemy\\npsycopg2-binary\\npydantic\\nalembic\\npython-dotenv"
      ],
      "security_features": [
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses psycopg2"
      ],
      "compliance_features": [],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "notifications": {
      "name": "notifications",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "pydantic==2.9.2",
        "prometheus-fastapi-instrumentator==7.0.0",
        "SQLAlchemy==2.0.36",
        "python-jose[cryptography]==3.3.0",
        "psycopg2-binary==2.9.10",
        "alembic==1.13.3",
        "opentelemetry-distro",
        "opentelemetry-exporter-otlp",
        "opentelemetry-instrumentation-fastapi",
        "opentelemetry-instrumentation-requests",
        "requests==2.32.3",
        "kafka-python==2.0.2"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses cryptography",
        "Uses psycopg2"
      ],
      "compliance_features": [],
      "criticality_score": 0.8,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "blood_bank": {
      "name": "blood_bank",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": true,
      "has_tests": true,
      "framework": "FastAPI",
      "port": 8001,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.104.1",
        "uvicorn[standard]==0.24.0",
        "sqlalchemy==2.0.23",
        "psycopg2-binary==2.9.9",
        "alembic==1.12.1",
        "pydantic==2.5.0",
        "python-multipart==0.0.6",
        "python-dotenv==1.0.0"
      ],
      "security_features": [
        "Docker python:3",
        "Docker slim",
        "Uses sqlalchemy",
        "Uses psycopg2",
        "Uses pydantic"
      ],
      "compliance_features": [
        "Handles patient data"
      ],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Implement audit logging"
      ]
    },
    "doctor_portal": {
      "name": "doctor_portal",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 9009,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi\\nuvicorn\\nsqlalchemy\\npsycopg2-binary\\npydantic\\nalembic\\npython-dotenv"
      ],
      "security_features": [
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses psycopg2"
      ],
      "compliance_features": [
        "Handles patient data"
      ],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "backup_disaster_recovery": {
      "name": "backup_disaster_recovery",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": true,
      "has_tests": true,
      "framework": "FastAPI",
      "port": 8006,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.104.1",
        "uvicorn[standard]==0.24.0",
        "sqlalchemy==2.0.23",
        "psycopg2-binary==2.9.9",
        "alembic==1.12.1",
        "pydantic==2.5.0",
        "python-multipart==0.0.6",
        "python-dotenv==1.0.0",
        "pytest==7.4.3",
        "boto3==1.28.62",
        "azure-storage-blob==12.19.0",
        "cryptography==41.0.7",
        "schedule==1.2.0",
        "python-dateutil==2.8.2"
      ],
      "security_features": [
        "Docker python:3",
        "Docker slim",
        "Uses sqlalchemy",
        "Uses psycopg2",
        "Uses pydantic",
        "Uses cryptography"
      ],
      "compliance_features": [],
      "criticality_score": 0.8,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging"
      ]
    },
    "erp": {
      "name": "erp",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": true,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi\\nuvicorn\\nSQLAlchemy\\npsycopg2-binary\\npydantic"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses psycopg2"
      ],
      "compliance_features": [],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging"
      ]
    },
    "hr": {
      "name": "hr",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "SQLAlchemy==2.0.36",
        "psycopg2-binary==2.9.10",
        "pydantic==2.9.2",
        "prometheus-fastapi-instrumentator==7.0.0",
        "python-jose[cryptography]==3.3.0"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses sqlalchemy",
        "Uses psycopg2",
        "Uses pydantic",
        "Uses cryptography"
      ],
      "compliance_features": [],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "e_prescription": {
      "name": "e_prescription",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": true,
      "has_tests": true,
      "framework": "FastAPI",
      "port": 8005,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.104.1",
        "uvicorn[standard]==0.24.0",
        "sqlalchemy==2.0.23",
        "psycopg2-binary==2.9.9",
        "alembic==1.12.1",
        "pydantic==2.5.0",
        "python-multipart==0.0.6",
        "python-dotenv==1.0.0",
        "pytest==7.4.3",
        "requests==2.31.0",
        "xmltodict==0.13.0",
        "python-dateutil==2.8.2"
      ],
      "security_features": [
        "Docker python:3",
        "Docker slim",
        "Uses sqlalchemy",
        "Uses psycopg2",
        "Uses pydantic"
      ],
      "compliance_features": [
        "Handles patient data"
      ],
      "criticality_score": 0.8,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Implement audit logging"
      ]
    },
    "analytics_service": {
      "name": "analytics_service",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "prometheus-fastapi-instrumentator",
        "python-jose[cryptography]",
        "opentelemetry-distro",
        "opentelemetry-exporter-otlp",
        "opentelemetry-instrumentation-fastapi",
        "opentelemetry-instrumentation-requests",
        "SQLAlchemy==2.0.36",
        "psycopg2-binary==2.9.10",
        "requests==2.32.3"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses cryptography",
        "Uses sqlalchemy",
        "Uses psycopg2"
      ],
      "compliance_features": [],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "radiology": {
      "name": "radiology",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "pydantic==2.9.2",
        "prometheus-fastapi-instrumentator==7.0.0",
        "SQLAlchemy==2.0.36",
        "python-jose[cryptography]==3.3.0",
        "psycopg2-binary==2.9.10",
        "alembic==1.13.3",
        "opentelemetry-distro",
        "opentelemetry-exporter-otlp",
        "opentelemetry-instrumentation-fastapi",
        "opentelemetry-instrumentation-requests"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses cryptography",
        "Uses psycopg2"
      ],
      "compliance_features": [
        "log"
      ],
      "criticality_score": 0.8,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "er_alerts": {
      "name": "er_alerts",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "pydantic==2.9.2",
        "prometheus-fastapi-instrumentator==7.0.0",
        "SQLAlchemy==2.0.36",
        "python-jose[cryptography]==3.3.0",
        "psycopg2-binary==2.9.10",
        "opentelemetry-distro==0.48b0",
        "opentelemetry-sdk==1.27.0",
        "opentelemetry-exporter-otlp==1.27.0",
        "opentelemetry-instrumentation-fastapi==0.48b0",
        "opentelemetry-instrumentation-requests==0.48b0",
        "opentelemetry-instrumentation-sqlalchemy==0.48b0",
        "opentelemetry-instrumentation-psycopg2==0.48b0"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses cryptography",
        "Uses psycopg2",
        "Uses sqlalchemy",
        "Uses psycopg2"
      ],
      "compliance_features": [],
      "criticality_score": 0.8,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Add compliance features (audit logging, HIPAA)",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "patients": {
      "name": "patients",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 8000,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "SQLAlchemy==2.0.36",
        "psycopg2-binary==2.9.10",
        "pydantic==2.9.2"
      ],
      "security_features": [
        "cors",
        "middleware",
        "Docker python:3",
        "Docker slim",
        "Uses sqlalchemy",
        "Uses psycopg2",
        "Uses pydantic"
      ],
      "compliance_features": [
        "Handles patient data"
      ],
      "criticality_score": 0.8,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    },
    "bed_management": {
      "name": "bed_management",
      "has_main": true,
      "has_models": true,
      "has_schemas": true,
      "has_dockerfile": true,
      "has_requirements": true,
      "has_docker_compose": false,
      "has_tests": false,
      "framework": "FastAPI",
      "port": 9008,
      "dependencies": [
        "SQLAlchemy",
        "Pydantic",
        "fastapi==0.115.5",
        "uvicorn[standard]==0.32.0",
        "pydantic==2.9.2",
        "prometheus-fastapi-instrumentator==7.0.0",
        "SQLAlchemy==2.0.36",
        "python-jose[cryptography]==3.3.0",
        "psycopg2-binary==2.9.10",
        "alembic==1.13.3"
      ],
      "security_features": [
        "Docker python:3",
        "Docker slim",
        "Uses pydantic",
        "Uses sqlalchemy",
        "Uses cryptography",
        "Uses psycopg2"
      ],
      "compliance_features": [
        "Handles patient data"
      ],
      "criticality_score": 0.5,
      "readiness_score": 1.0,
      "issues": [],
      "recommendations": [
        "Add authentication mechanisms",
        "Implement data encryption",
        "Implement audit logging",
        "Add unit and integration tests"
      ]
    }
  },
  "overall_assessment": {
    "architecture_maturity": "Mature",
    "deployment_readiness": "High",
    "security_posture": "Basic",
    "compliance_readiness": "Partial",
    "overall_health": "Needs Improvement",
    "key_strengths": [
      "Consistent framework usage"
    ],
    "critical_gaps": [
      "3 services missing Dockerfile"
    ],
    "immediate_actions": [
      "Create Dockerfiles for all services"
    ]
  }
}