# HMS Enterprise-Grade Frontend Dockerfile - Production Optimized
ARG NODE_VERSION=22-alpine
FROM node:${NODE_VERSION} as base

# Set environment variables
ENV NODE_ENV=production \
    NPM_CONFIG_LOGLEVEL=warn \
    NPM_CONFIG_PRODUCTION=false

# Build stage
FROM base as builder

# Install build dependencies
RUN apk add --no-cache \
        python3 \
        make \
        g++ \
        linux-headers \
        alpine-sdk

WORKDIR /app

# Copy package files
COPY frontend/package*.json ./

# Install dependencies
RUN npm ci --legacy-peer-deps

# Copy source code
COPY frontend/ .

# Build application
RUN npm run build

# Production stage
FROM nginx:alpine as production

# Install nginx modules and dependencies
RUN apk add --no-cache \
        curl \
        bash \
        logrotate \
        nginx-mod-http-brotli \
        nginx-mod-http-headers-more \
        nginx-mod-http-cache-purge

# Create directories
RUN mkdir -p /var/log/nginx /var/lib/nginx/cache /var/lib/nginx/tmp

# Copy build artifacts
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY devops/docker/nginx.conf /etc/nginx/nginx.conf
COPY devops/docker/default.conf /etc/nginx/conf.d/default.conf

# Copy security headers
COPY devops/docker/security-headers.conf /etc/nginx/security-headers.conf

# Create non-root user
RUN addgroup -g 1001 -S nginx && \
    adduser -S nginx -G nginx

# Set proper permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /var/lib/nginx

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:80/health || exit 1

# Expose port
EXPOSE 80

# Copy startup script
COPY devops/docker/nginx-entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Switch to non-root user
USER nginx

# Copy security configurations
COPY --chown=nginx:nginx devops/docker/security.conf /etc/nginx/conf.d/security.conf

CMD ["/entrypoint.sh"]